services:
  # Frontend development server
  frontend:
    build:
      context: ../..
      dockerfile: devops/docker/frontend.Dockerfile
      target: development
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ../../packages/frontend:/app/packages/frontend
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - VITE_PORT=${FRONTEND_PORT}
      - VITE_API_URL=http://backend:4000
    command: npm run dev --workspace=packages/frontend -- --host 0.0.0.0
    depends_on:
      - backend

  # Backend development server
  backend:
    build:
      context: ../..
      dockerfile: devops/docker/backend.Dockerfile
      target: development
    ports:
      - "${BACKEND_PORT}:4000"
    volumes:
      - ../../packages/backend:/app/packages/backend
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=4000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_ENDPOINT_URL=http://localstack:4566
      - S3_ENDPOINT=http://localstack:4566
      - LAMBDA_ENDPOINT=http://localstack:4566
      - APIGATEWAY_ENDPOINT=http://localstack:4566
      - DYNAMODB_ENDPOINT=http://localstack:4566
      - DYNAMODB_USERS_TABLE=${DYNAMODB_USERS_TABLE}
      - DYNAMODB_PROJECTS_TABLE=${DYNAMODB_PROJECTS_TABLE}
      - DYNAMODB_PROJECT_INSTANCES_TABLE=${DYNAMODB_PROJECT_INSTANCES_TABLE}
    command: npm run dev --workspace=packages/backend -- --host 0.0.0.0
    depends_on:
      - localstack

  # LocalStack for AWS services simulation
  localstack:
    image: localstack/localstack:latest
    ports:
      - "${LOCALSTACK_PORT}:4566"
    environment:
      - SERVICES=${LOCALSTACK_SERVICES}
      - DEFAULT_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR}
      - LAMBDA_REMOTE_DOCKER=${LAMBDA_REMOTE_DOCKER}
      - LAMBDA_DOCKER_NETWORK=${LAMBDA_DOCKER_NETWORK}
      - LAMBDA_DOCKER_HOST=${LAMBDA_DOCKER_HOST}
    volumes:
      - localstack-data:/var/lib/localstack/data
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4566/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  dynamodb-data:
  localstack-data: 